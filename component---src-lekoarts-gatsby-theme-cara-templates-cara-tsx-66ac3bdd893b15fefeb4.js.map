{"version":3,"file":"component---src-lekoarts-gatsby-theme-cara-templates-cara-tsx-66ac3bdd893b15fefeb4.js","mappings":"yPAAA,EAAe,IAA0B,wD,oBCGzC,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,GAAI,OACHC,EAAAA,EAAAA,MAAsBP,EAAMQ,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBR,EAAYG,GAAI,KAAM,cAAe,KAAMK,EAAAA,cAAoBR,EAAYI,EAAG,KAAM,kEAAmE,KAAMI,EAAAA,cAAoBR,EAAYI,EAAG,KAAM,qGAAsG,KAAMI,EAAAA,cAAoBR,EAAYK,GAAI,KAAM,gBAAiB,KAAMG,EAAAA,cAAoBR,EAAYI,EAAG,KAAM,eAAgBI,EAAAA,cAAoB,IAAK,CACxgBC,KAAM,8BACL,wBACL,CAKA,MAJA,SAAoBV,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOW,QAASC,GAAaV,OAAOC,OAAO,CAAC,GAAGI,EAAAA,EAAAA,MAAsBP,EAAMQ,YAC3E,OAAOI,EAAYH,EAAAA,cAAoBG,EAAWZ,EAAOS,EAAAA,cAAoBV,EAAmBC,IAAUD,EAAkBC,EAC9H,ECuEA,MAzEaa,IAAA,IAAC,OAAEC,EAAM,OAAEC,EAAS,GAAwCF,EAAA,OACvEG,EAAAA,EAAAA,GAAA,YACEA,EAAAA,EAAAA,GAACC,EAAAA,EAAO,CAACC,MAAO,GAAKJ,OAAQA,EAAQC,OAAQA,IAWzCC,EAAAA,EAAAA,GAAA,OAAKG,IAAKC,EAAeC,MAAO,IAAKC,GAAI,CAAOC,SAAU,WAC5DC,OAAQ,eACRC,KAAM,eACNC,QAAS,QACTC,MAAO,eACPN,MAAO,MACPO,KAAM,MACNC,OAAQ,UACRb,EAAAA,EAAAA,GAACc,EAAAA,GAAU,QAqBbd,EAAAA,EAAAA,GAACe,EAAAA,EAAO,CAACT,GAAI,CAAEU,QAAS,gBAAkBd,MAAO,GAAKJ,OAAQA,EAAQC,OAAQA,IAC5EC,EAAAA,EAAAA,GAACiB,EAAAA,EAAK,MACJjB,EAAAA,EAAAA,GAACkB,EAAK,SAGVlB,EAAAA,EAAAA,GAACC,EAAAA,EAAO,CAACQ,KAAK,UAAUP,MAAO,GAAKJ,OAAQA,EAAQC,OAAQA,IAC1DC,EAAAA,EAAAA,GAAA,OAAKM,GAAI,CAAEC,SAAU,WAAYM,OAAQ,EAAGR,MAAO,OAAQc,UAAW,+BACpEnB,EAAAA,EAAAA,GAAA,OACEM,GAAI,CACFC,SAAU,WACVa,OAAQ,OACRC,IAAK,CAAEhB,MAAO,OAAQe,OAAQ,QAC9BE,KAAM,CAAEC,WAAWC,EAAAA,EAAAA,IAAc,WAGnCxB,EAAAA,EAAAA,GAAA,OAAKyB,MAAM,6BAA6BC,GAAG,eAAeC,QAAQ,iBAAiBC,oBAAoB,SACrG5B,EAAAA,EAAAA,GAAA,aACEA,EAAAA,EAAAA,GAAA,WACE6B,cAAc,IACdC,OAAO,4MACPC,YAAY,aACZC,IAAI,aAOZ,E,UCjER,MATaC,IACXxC,EAAAA,cAACyC,EAAAA,EAAM,KACLzC,EAAAA,cAAC0C,EAAAA,EAAQ,CAACC,MAAO,GACf3C,EAAAA,cAAC4C,EAAI,CAACvC,OAAQ,EAAGC,OAAQ,MAQxB,MAAMuC,EAAeA,IAAM7C,EAAAA,cAAC8C,EAAAA,EAAG,K","sources":["webpack://microCart/./static/microCart.png","webpack://microCart/./src/@lekoarts/gatsby-theme-cara/sections/intro.mdx","webpack://microCart/./src/@lekoarts/gatsby-theme-cara/components/hero.tsx","webpack://microCart/./src/@lekoarts/gatsby-theme-cara/templates/cara.tsx"],"sourcesContent":["export default __webpack_public_path__ + \"static/microCart-cd976083bf8b452c8be0d3a23e3d85c1.png\";","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"Micro-Cart\"), \"\\n\", React.createElement(_components.p, null, \"Micro-Cart is a pipette attachment that makes pipettes better.\"), \"\\n\", React.createElement(_components.p, null, \"Micro-Cart uses a custom sensor suite to watch for error in a pipette measurement and correct it.\"), \"\\n\", React.createElement(_components.h2, null, \"Get in touch\"), \"\\n\", React.createElement(_components.p, null, \"email us at \", React.createElement(\"a\", {\n    href: \"mailto:hello@microCart.top\"\n  }, \"hello@microCart.top\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport Divider from \"../elements/divider\"\nimport Inner from \"../elements/inner\"\nimport Content from \"../elements/content\"\nimport Svg from \"./svg\"\nimport MicroCartIcon from \"../../../../static/microCart.png\"\nimport { withPrefix } from \"gatsby\"\nimport {StaticImage} from \"gatsby-plugin-image\"\nimport { hidden } from \"../styles/utils\"\nimport { UpDown, UpDownWide, waveAnimation } from \"../styles/animations\"\nimport Intro from \"../sections/intro.mdx\"\n\n\nconst Hero = ({ offset, factor = 1 }: { offset: number; factor?: number }) => (\n  <div>\n    <Divider speed={0.2} offset={offset} factor={factor}>\n      {/* <UpDown>\n        <Svg icon=\"arrowUp\" hiddenMobile width={16} color=\"icon_blue\" left=\"80%\" top=\"10%\" />\n        <Svg icon=\"triangle\" width={12} stroke color=\"icon_brightest\" left=\"90%\" top=\"50%\" />\n        <Svg icon=\"circle\" width={16} color=\"icon_darker\" left=\"70%\" top=\"90%\" />\n        <Svg icon=\"triangle\" width={16} stroke color=\"icon_darkest\" left=\"30%\" top=\"65%\" />\n        <Svg icon=\"cross\" width={16} stroke color=\"icon_pink\" left=\"28%\" top=\"15%\" />\n        <Svg icon=\"circle\" width={6} color=\"icon_darkest\" left=\"75%\" top=\"10%\" />\n        <Svg icon=\"upDown\" hiddenMobile width={8} color=\"icon_darkest\" left=\"45%\" top=\"10%\" />\n        </UpDown> */}\n        {/* <StaticImage image={MicroCartIcon}/> */}\n        <img src={MicroCartIcon} width={500} sx={{      position: `absolute`,\n      stroke: `currentColor`,\n      fill: `currentColor`,\n      display: `block`,\n      color: `currentcolor`,\n      width: \"50%\",\n      left: \"50%\",\n      bottom: \"30%\"}}></img>\n      <UpDownWide>\n        {/* <Svg icon=\"triangle\" width={12} stroke color=\"icon_brightest\" left=\"90%\" top=\"50%\" />\n        <Svg icon=\"circle\" width={16} color=\"icon_darker\" left=\"70%\" top=\"90%\" />\n        <Svg icon=\"triangle\" width={16} stroke color=\"icon_darkest\" left=\"30%\" top=\"65%\" />\n        <Svg icon=\"cross\" width={16} stroke color=\"icon_pink\" left=\"28%\" top=\"15%\" />\n        <Svg icon=\"circle\" width={6} color=\"icon_darkest\" left=\"75%\" top=\"10%\" />\n        <Svg icon=\"upDown\" hiddenMobile width={8} color=\"icon_darkest\" left=\"45%\" top=\"10%\" /> */}\n      </UpDownWide>\n      {/* <Svg icon=\"circle\" hiddenMobile width={24} color=\"icon_darker\" left=\"5%\" top=\"70%\" />\n      <Svg icon=\"circle\" width={6} color=\"icon_darkest\" left=\"4%\" top=\"20%\" />\n      <Svg icon=\"circle\" width={12} color=\"icon_darkest\" left=\"50%\" top=\"60%\" />\n      <Svg icon=\"upDown\" width={8} color=\"icon_darkest\" left=\"95%\" top=\"90%\" />\n      <Svg icon=\"upDown\" hiddenMobile width={24} color=\"icon_darker\" left=\"40%\" top=\"80%\" />\n      <Svg icon=\"triangle\" width={8} stroke color=\"icon_darker\" left=\"25%\" top=\"5%\" />\n      <Svg icon=\"circle\" width={64} color=\"icon_green\" left=\"95%\" top=\"5%\" />\n      <Svg icon=\"box\" hiddenMobile width={64} color=\"icon_purple\" left=\"5%\" top=\"90%\" />\n      <Svg icon=\"box\" width={6} color=\"icon_darkest\" left=\"10%\" top=\"10%\" />\n      <Svg icon=\"box\" width={12} color=\"icon_darkest\" left=\"40%\" top=\"30%\" />\n      <Svg icon=\"hexa\" width={16} stroke color=\"icon_darker\" left=\"10%\" top=\"50%\" />\n      <Svg icon=\"hexa\" width={8} stroke color=\"icon_darker\" left=\"80%\" top=\"70%\" />  */}\n    </Divider>\n    <Content sx={{ variant: `texts.bigger` }} speed={0.4} offset={offset} factor={factor}>\n      <Inner>\n        <Intro />\n      </Inner>\n    </Content>\n    <Divider fill=\"divider\" speed={0.2} offset={offset} factor={factor}>\n      <div sx={{ position: `absolute`, bottom: 0, width: `full`, transform: `matrix(1, 0, 0, -1, 0, 0)` }}>\n        <div\n          sx={{\n            position: `relative`,\n            height: `full`,\n            svg: { width: `100%`, height: `40vh` },\n            path: { animation: waveAnimation(`20s`) },\n          }}\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" id=\"contact-wave\" viewBox=\"0 0 800 338.05\" preserveAspectRatio=\"none\">\n            <path>\n              <animate\n                attributeName=\"d\"\n                values=\"M 0 100 Q 250 50 400 200 Q 550 350 800 300 L 800 0 L 0 0 L 0 100 Z;M 0 100 Q 200 150 400 200 Q 600 250 800 300 L 800 0 L 0 0 L 0 100 Z;M 0 100 Q 150 350 400 200 Q 650 50 800 300 L 800 0 L 0 0 L 0 100 Z\"\n                repeatCount=\"indefinite\"\n                dur=\"30s\"\n              />\n            </path>\n          </svg>\n        </div>\n      </div>\n    </Divider>\n  </div>\n)\n\nexport default Hero\n","import * as React from \"react\"\nimport type { HeadFC } from \"gatsby\"\nimport { Parallax } from \"@react-spring/parallax\"\nimport Layout from \"../components/layout\"\nimport Hero from \"../components/hero\"\nimport Projects from \"../components/projects\"\nimport About from \"../components/about\"\nimport Contact from \"../components/contact\"\nimport Seo from \"../components/seo\"\n\nconst Cara = () => (\n  <Layout>\n    <Parallax pages={1}>\n      <Hero offset={0} factor={1} />\n      {/* <Contact offset={0} factor={1} /> */}\n    </Parallax>\n  </Layout>\n)\n\nexport default Cara\n\nexport const Head: HeadFC = () => <Seo />"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","h2","_provideComponents","components","React","href","wrapper","MDXLayout","_ref","offset","factor","jsx","Divider","speed","src","MicroCartIcon","width","sx","position","stroke","fill","display","color","left","bottom","UpDownWide","Content","variant","Inner","Intro","transform","height","svg","path","animation","waveAnimation","xmlns","id","viewBox","preserveAspectRatio","attributeName","values","repeatCount","dur","Cara","Layout","Parallax","pages","Hero","Head","Seo"],"sourceRoot":""}